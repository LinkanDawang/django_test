"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import environ
from loguru import logger

env = environ.Env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
APPS_DIR = os.path.join(BASE_DIR, 'apps')  # 应用文件夹
LOGS_DIR = os.path.join(BASE_DIR, 'logs')  # 日志文件夹
env.read_env(os.path.join(BASE_DIR, ".env"))

# ENV Name
ENV_NAME = env("ENV_NAME")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(bl(2_hu0a)f)4(go!jgpv2%s%9)!(u3htlb%_n#zd=psb$s28'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
DJANGO_APPS = [
    'simplecus',
    'simpleui',
    'import_export',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

LOCAL_APPS = ['apps.user', 'apps.test_model']

THIRD_APPS = [
    "silk",
    "rest_framework",
    # "rest_framework_filters",
    "rest_framework_tracking",
    "storages"
]

INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + THIRD_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'apps.utils.middlewares.NewCustomMiddleware',
    # 'apps.utils.middlewares.UploadFileMiddleware',
    # # 顺序与INSTALLED_APPS注册的顺序一致，需要在SilkyMiddleware之前，否则会报错
    'simplecus.middlewares.SimpleMiddleware',
    'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'config.urls'

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env.str("DATABASE_NAME"),
        'HOST': env.str("DATABASE_HOST"),
        'PORT': env.str("DATABASE_PORT"),
        'USER': env.str("DATABASE_USER"),
        'PASSWORD': env.str("DATABASE_PASSWORD"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


DEFAULT_FILE_STORAGE = "apps.core.storages.StaticStorage"
STATICFILES_STORAGE = "apps.core.storages.StaticStorage"

# Simplecus
# SIMPLEUI_STATIC_OFFLINE = True

# Media files
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'media')
MEDIA_URL = '/media/'
MEDIAFILES_LOCATION = 'media'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_collect_dir')  # 收集静态文件
STATICFILES_LOCATION = "static"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ]
        },
    }
]

AUTH_USER_MODEL = 'user.User'
LOGIN_URL = "/api/user/login/"
AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.AllowAllUsersModelBackend']

# 项目日志的配置
BASE_LOG_DIR = os.path.join(BASE_DIR, "logs")
COLLECT_LOG_DIR = os.path.join(BASE_LOG_DIR, "collect")
INFO_LOG_DIR = os.path.join(BASE_LOG_DIR, "info")
SERVER_LOG_DIR = os.path.join(BASE_LOG_DIR, "server")
REQUEST_LOG_DIR = os.path.join(BASE_LOG_DIR, "request")
CELERY_LOG_DIR = os.path.join(BASE_LOG_DIR, "celery")
SQL_LOG_DIR = os.path.join(BASE_LOG_DIR, "sql")


# 自动创建日志文件的保存路径
for path in [COLLECT_LOG_DIR, INFO_LOG_DIR, SERVER_LOG_DIR, REQUEST_LOG_DIR, CELERY_LOG_DIR, SQL_LOG_DIR]:
    if not os.path.exists(path):
        os.makedirs(path)

logger.add(
    INFO_LOG_DIR + "/info.log", level="ERROR", format="{time} {level} {message}",
    colorize=True, rotation="5 MB"
)

# 接口接收请求中body最大数据大小
DATA_UPLOAD_MAX_MEMORY_SIZE = 500242880


# 配置发送邮箱验证邮件发件人的信息
EMAIL_HOST = env.str("EMAIL_HOST")  # 发邮件主机
EMAIL_PORT = env.str("EMAIL_PORT")  # 发邮件端口
EMAIL_HOST_USER = env.str("EMAIL_HOST_USER")  # 授权的邮箱
EMAIL_HOST_PASSWORD = env.str("EMAIL_HOST_PASSWORD")  # 邮箱授权时获得的密码，非注册登录密码
EMAIL_FROM = env.str("EMAIL_FROM")  # 发件人抬头
EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS")
# Nx6vhYCV3neVAWZC

# fastdfs配置
# FDFS_CLIENT_CONF = os.path.join(BASE_DIR, "config/dfs_client.conf")
# FDFS_SERVER_IP = 'http://192.168.101.98:8888/'

# Storage
# https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html
AWS_ACCESS_KEY_ID = env.str("ALI_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = env.str("ALI_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = env.str("ALIOSS_BUCKET_NAME")
AWS_S3_ENDPOINT = env.str("ALI_OSS_ENDPOINT")
AWS_S3_ENDPOINT_URL = f"https://{AWS_S3_ENDPOINT}"
AWS_S3_ADDRESSING_STYLE = "virtual"
# FIXME 使用Simplecus模块时，AWS_QUERYSTRING_AUTH=True会导致模板渲染时请求部分静态文件失败
# FIXME <link rel="stylesheet" href="{% static '/admin/simpleui-x/css/login.css' %}?_=2.1">
# https://bucket_name.xxx.oss.com?AWSAccessKeyId=LTAI4G2mjcChkWTDqSXRBsWd&Signature=sUajun7wqPRjAseqTH%2BVEhHaQ8U%3D&Expires=1614321623?_=2.1
# FIXME 路径后 [?_=2.1 | ?_=3.3 | ?_=2021.3] 等此类后缀会使得模板渲染时无法找到存储里oss服务里静态文件
AWS_QUERYSTRING_AUTH = False

# RAM用户，用于oss sts临时访问的策略
ALI_OSS_RAM_ACCESS_KEY = env.str("ALI_OSS_RAM_ACCESS_KEY")
ALI_OSS_RAM_SECRET_KEY = env.str("ALI_OSS_RAM_SECRET_KEY")
